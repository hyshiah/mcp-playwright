name: 发布到 PyPI

on:
  push:
    tags:
      - 'v*'  # 当推送以 'v' 开头的标签时触发

  workflow_dispatch:  # 允许手动触发

jobs:
  build:
    name: 构建分发包
    runs-on: ubuntu-latest

    steps:
    - name: 检出代码
      uses: actions/checkout@v4

    - name: 安装 uv
      uses: astral-sh/setup-uv@v4
      with:
        version: "latest"

    - name: 设置 Python
      run: uv python install 3.11

    - name: 安装依赖
      run: |
        uv sync --dev

    - name: 构建包
      run: |
        uv build

    - name: 验证包
      run: |
        uv run twine check dist/*

    - name: 上传构建产物
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

  publish-to-pypi:
    name: 发布到 PyPI
    if: startsWith(github.ref, 'refs/tags/')  # 仅在标签推送时运行
    needs:
    - build
    runs-on: ubuntu-latest

    environment:
      name: pypi
      url: https://pypi.org/p/mcp-playwright

    permissions:
      id-token: write  # OIDC 发布需要此权限

    steps:
    - name: 下载构建产物
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

    - name: 发布到 PyPI
      uses: pypa/gh-action-pypi-publish@release/v1

  publish-to-testpypi:
    name: 发布到 TestPyPI
    needs:
    - build
    runs-on: ubuntu-latest

    environment:
      name: testpypi
      url: https://test.pypi.org/p/mcp-playwright

    permissions:
      id-token: write  # OIDC 发布需要此权限

    steps:
    - name: 下载构建产物
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

    - name: 发布到 TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/

  github-release:
    name: 创建 GitHub Release
    needs:
    - publish-to-pypi
    runs-on: ubuntu-latest

    permissions:
      contents: write  # 创建 release 需要此权限

    steps:
    - name: 检出代码
      uses: actions/checkout@v4

    - name: 下载构建产物
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

    - name: 创建 GitHub Release
      env:
        GITHUB_TOKEN: ${{ github.token }}
      run: |
        gh release create \
          '${{ github.ref_name }}' \
          --repo '${{ github.repository }}' \
          --title '${{ github.ref_name }}' \
          --generate-notes \
          dist/*
