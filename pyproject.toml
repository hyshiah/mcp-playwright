[project]
name = "mcp-playwright"
version = "0.1.1"
description = "基于Playwright的模型上下文协议(MCP)服务器，为AI助手提供强大的浏览器自动化能力"
readme = "README.md"
requires-python = ">=3.10"
license = { text = "MIT" }
authors = [
    { name = "ma-pony", email = "mtf201013@gmail.com" }
]
keywords = ["mcp", "playwright", "automation", "browser", "ai", "llm", "fastmcp"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet :: WWW/HTTP :: Browsers",
    "Topic :: Software Development :: Testing",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    "mcp[cli]>=1.9.0",
    "patchright>=1.52.0",
    "playwright>=1.52.0",
]

[project.urls]
Homepage = "https://github.com/ma-pony/mcp-playwright"
Repository = "https://github.com/ma-pony/mcp-playwright"
Documentation = "https://github.com/ma-pony/mcp-playwright#readme"
"Bug Tracker" = "https://github.com/ma-pony/mcp-playwright/issues"
Changelog = "https://github.com/ma-pony/mcp-playwright/releases"

[project.scripts]
mcp-playwright = "mcp_playwright.server:mcp.run"

[project.entry-points."mcp.servers"]
playwright = "mcp_playwright.server:mcp"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.black]
line-length = 88
target-version = ['py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["mcp_playwright"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
asyncio_mode = "auto"
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[dependency-groups]
dev = [
    "ruff>=0.11.12",
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.5.0",
    "pre-commit>=3.0.0",
    "twine>=5.0.0",
]
